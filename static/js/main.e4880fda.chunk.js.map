{"version":3,"sources":["actions/types.js","actions/auth.js","hoc/navbar/components/user-preview/index.js","hoc/navbar/components/user-preview/user-preview.js","hoc/navbar/navbar.js","hoc/navbar/index.js","pages/login/index.js","pages/login/login.js","pages/signup/index.js","pages/signup/signup.js","reducers/auth.js","reducers/index.js","store.js","App.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAIL","SIGNUP_SUCCESS","SIGNUP_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAIL","PASSWORD_RESET_CONFIRM_FAIL","PASSWORD_RESET_CONFIRM_SUCCESS","LOGOUT","API_BASE","load_user","dispatch","a","localStorage","getItem","config","headers","axios","get","res","type","payload","data","UserPreview","connect","state","isAuthenticated","authReducer","logout","className","href","role","id","data-toggle","aria-haspopup","aria-expanded","class","aria-hidden","aria-labelledby","to","onClick","Navbar","props","checkAuthenticated","data-target","aria-controls","aria-label","this","children","Component","mapDispatchToProps","body","JSON","stringify","token","post","code","Login","login","email","password","useState","formData","setFormData","onChange","e","target","name","value","style","backgroundImage","backgroundSize","backgroundPosition","minHeight","onSubmit","preventDefault","placeholder","required","minLength","SignUp","signup","first_name","last_name","re_password","accountCreated","setAccountCreated","initialState","access","refresh","action","setItem","removeItem","combineReducers","middleware","thunk","store","createStore","reducer","composeWithDevTools","applyMiddleware","App","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4880fda.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\n\r\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\r\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\r\n\r\nexport const LOGOUT = 'LOGOUT';\r\n","import axios from 'axios';\r\n\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    // PASSWORD_RESET_FAIL,\r\n    // PASSWORD_RESET_SUCCESS,\r\n    // PASSWORD_RESET_CONFIRM_FAIL,\r\n    // PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    // ACTIVATION_SUCCESS,\r\n    // ACTIVATION_FAIL,\r\n    LOGOUT\r\n} from './types';\r\n\r\n// const API_BASE = process.env.REACT_APP_API_URL;\r\nconst API_BASE = 'http://localhost:8000';\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        const body = JSON.stringify({token: localStorage.getItem('access')});\r\n\r\n        try {\r\n            const res = await axios.post(`${API_BASE}/auth/jwt/verify/`, body, config);\r\n\r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({type: AUTHENTICATED_SUCCESS});\r\n            } else {\r\n                dispatch({type: AUTHENTICATED_FAIL});\r\n            }\r\n        } catch (err) {\r\n            dispatch({type: AUTHENTICATED_FAIL});\r\n        }\r\n    } else {\r\n        dispatch({type: AUTHENTICATED_FAIL});\r\n    }\r\n}\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${API_BASE}/auth/users/me/`, config);\r\n            dispatch({type: USER_LOADED_SUCCESS, payload: res.data});\r\n        } catch (err) {\r\n            dispatch({type: USER_LOADED_FAIL});\r\n        } \r\n    } else {\r\n        dispatch({type: USER_LOADED_FAIL});\r\n    } \r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${API_BASE}/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch (error) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n};\r\n\r\nexport const signup = (email, first_name, last_name, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({email, first_name, last_name, password, re_password});\r\n\r\n    try {\r\n        const res = await axios.post(`${API_BASE}/auth/users/`, body, config);\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch (error) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL,\r\n        });\r\n    }\r\n};","import UserPreview from './user-preview';\r\n\r\nexport default UserPreview;","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { logout } from '../../../../actions/auth';\r\n\r\nimport './user-preview.css';\r\n\r\nconst UserPreview = ({ isAuthenticated, logout  }) => {\r\n\r\n    const guestLoginButton = () => (\r\n\r\n        <button type=\"button\" className=\"btn btn-primary\">\r\n            <i className=\"fa fa-sign-in mr-2\"></i>\r\n            <Link to='/login'>Вход\r\n            </Link>\r\n        </button>\r\n \r\n  \r\n    )\r\n\r\n    const userInfo = () => (\r\n        <div className=\"dropdown\">\r\n            <a className=\"btn dropdown-toggle\" href=\"/\" role=\"button\" id=\"dropdownMenuLink\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n            <i class=\"fa fa-user-circle mr-2\" aria-hidden=\"true\"></i>\r\n            Мой аккаунт\r\n            </a>\r\n            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuLink\">\r\n                <Link className=\"dropdown-item\" to=\"/home/\" onClick={ logout }>Выйти</Link>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <Fragment>\r\n            { isAuthenticated ? userInfo() : guestLoginButton() }\r\n        </Fragment>\r\n    );\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.authReducer.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(UserPreview);","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport UserPreview from './components/user-preview';\r\n\r\nimport { checkAuthenticated, load_user } from '../../actions/auth';\r\n\r\nimport './navbar.css';\r\n\r\nclass Navbar extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        props.checkAuthenticated();\r\n        props.load_user();\r\n    };\r\n\r\n    render() {\r\n\r\n        \r\n        return (\r\n            <Fragment>\r\n                <nav className='navbar navbar-expand-lg navbar-light'>\r\n                    <div className='container'>\r\n                        <a className='navbar-brand mr-3' href='/'>BlondaShop</a>\r\n                        <UserPreview />\r\n                        <button \r\n                            className='navbar-toggler'\r\n                            type='button'\r\n                            data-toggle='collapse'\r\n                            data-target='#navbarNav'\r\n                            aria-controls='navbarNav'\r\n                            aria-expanded='false'\r\n                            aria-label='Toggle navigation'>\r\n                            <span className='navbar-toggler-icon'></span>\r\n                        </button>\r\n                        <div className='collapse navbar-collapse mx-auto' id='navbarNav'>\r\n                            <ul className=\"topBotomBordersOut navbar-nav mx-auto text-center\">\r\n                                <li className=\"nav-item active\">\r\n                                    <a className=\"nav-link\" href=\"/\">Мужчинам</a>\r\n                                </li>\r\n                                <li className=\"nav-item active\">\r\n                                    <a className=\"nav-link\" href=\"/\">Женщинам</a>\r\n                                </li>\r\n                                <li className=\"nav-item active\">\r\n                                    <a className=\"nav-link\" href=\"/\">Новинки</a>\r\n                                </li>\r\n                                <li className=\"nav-item active\">\r\n                                    <a className=\"nav-link\" href=\"/\">Распродажа</a>\r\n                                </li>\r\n                                <li className=\"nav-item active\">\r\n                                    <a className=\"nav-link\" href=\"/\">Контакты</a>\r\n                                </li>\r\n                            </ul>    \r\n                        </div>\r\n                    </div>\r\n                    \r\n                    \r\n                </nav>\r\n                { this.props.children }\r\n            </Fragment>\r\n        );\r\n    };\r\n};\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.authReducer.isAuthenticated\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    checkAuthenticated,\r\n    load_user\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","import Navbar from './navbar';\r\n\r\nexport default Navbar;","import Login from './login';\r\n\r\nexport default Login;","import React, { useState } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../actions/auth';\r\n\r\nimport './login.css';\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n\r\n    const [ formData, setFormData ] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(email, password);\r\n    }\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    const style = {\r\n        backgroundImage: 'url(https://jadone.biz/image/cache/data/slider/DSC00202z-1800x1020.jpg)',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center center',\r\n        minHeight: 'calc(100vh - 76px)'\r\n    }\r\n\r\n    return(\r\n\r\n        <div className='container-fluid'>\r\n            <div className='row no-gutter'>\r\n                <div className='col-md-6 d-none d-md-flex bg-image' style={style}></div>\r\n                <div className='col-md-6 bg-light'>\r\n                    <div className='login d-flex align-items-center'>\r\n                        <div className='container'>\r\n                            <div className='row mt-4'>\r\n                                <div className='col-lg-10 col-xl-7 mx-auto'>\r\n                                    <h3 className='display-4'>Авторизация</h3>\r\n                                    <p className='text-muted mb-3'>Войдите в систему, чтобы иметь возможность заказывать товары и накапливать бонусы.</p>\r\n                                    <form onSubmit={e => onSubmit(e)}>\r\n                                        <div className='form-group mb-3'>\r\n                                            <input\r\n                                                className='form-control rounded-pill border-0 shadow-sm px-4' \r\n                                                type='email' \r\n                                                placeholder='Email'\r\n                                                name='email'\r\n                                                value={ email }\r\n                                                onChange={e => onChange(e)} \r\n                                                required\r\n                                                 />\r\n                                        </div>\r\n                                        <div className='form-group mb-3'>\r\n                                            <input \r\n                                                className='form-control rounded-pill border-0 shadow-sm px-4 text-primary'\r\n                                                type='password' \r\n                                                placeholder='Пароль'\r\n                                                name='password'\r\n                                                value={ password }\r\n                                                onChange={e => onChange(e)}\r\n                                                minLength='6'\r\n                                                required />\r\n                                        </div>\r\n                                        <p className='mt-4 text-muted'>\r\n                                        У вас еще нет аккаунта? Тогда вы можете пройти <Link to='/signup'>регистрацию</Link></p>\r\n                                        <button type='submit' className='btn btn-primary btn-block text-uppercase mb-2 rounded-pill shadow-sm'>Войти</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.authReducer.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(Login);","import SignUp from './signup';\r\n\r\nexport default SignUp;","import React, { useState } from 'react';\r\nimport { Redirect, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signup } from '../../actions/auth';\r\n\r\nimport './signup.css';\r\n\r\nconst SignUp = ({ signup, isAuthenticated }) => {\r\n\r\n    const [ accountCreated, setAccountCreated ] = useState(false);\r\n\r\n    const [ formData, setFormData ] = useState({\r\n        email: '',\r\n        first_name: '',\r\n        last_name: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n\r\n    const { email, first_name, last_name, password, re_password } = formData;\r\n\r\n    const onChange = e => setFormData({...formData, [e.target.name]: e.target.value});\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (password === re_password) {\r\n            signup(email, first_name, last_name, password, re_password);\r\n            setAccountCreated(true);\r\n        }\r\n    };\r\n\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/' />\r\n    }\r\n\r\n    if (accountCreated) {\r\n        return <Redirect to='/login'/>\r\n    }\r\n\r\n    const style = {\r\n        backgroundImage: 'url(https://jadone.biz/image/cache/data/slider/DSC00202z-1800x1020.jpg)',\r\n        backgroundSize: 'cover',\r\n        backgroundPosition: 'center center',\r\n        minHeight: 'calc(100vh - 76px)'\r\n    }\r\n\r\n    return(\r\n\r\n        <div className='container-fluid'>\r\n            <div className='row no-gutter'>\r\n                <div className='col-md-6 d-none d-md-flex bg-image' style={style}></div>\r\n                <div className='col-md-6 bg-light'>\r\n                    <div className='login d-flex align-items-center'>\r\n                        <div className='container'>\r\n                            <div className='row mt-4'>\r\n                                <div className='col-lg-10 col-xl-7 mx-auto'>\r\n                                    <h3 className='display-4'>Регистрация</h3>\r\n                                    <p className='text-muted mb-3 mt-2'>Пройдите регистрацию, чтобы иметь возможность заказывать товары и накапливать бонусы.</p>\r\n                                    <form onSubmit={e => onSubmit(e)}>\r\n                                        <div className='form-group mb-3'>\r\n                                            <input\r\n                                                className='form-control rounded-pill border-0 shadow-sm px-4' \r\n                                                type='email' \r\n                                                placeholder='Email'\r\n                                                name='email'\r\n                                                value={ email }\r\n                                                onChange={e => onChange(e)} \r\n                                                required\r\n                                                 />\r\n                                        </div>\r\n                                        <div className='form-group mb-3'>\r\n                                            <input\r\n                                                className='form-control rounded-pill border-0 shadow-sm px-4' \r\n                                                type='text' \r\n                                                placeholder='Ваше имя'\r\n                                                name='first_name'\r\n                                                value={ first_name }\r\n                                                onChange={e => onChange(e)} \r\n                                                required\r\n                                                 />\r\n                                        </div>\r\n                                        <div className='form-group mb-3'>\r\n                                            <input\r\n                                                className='form-control rounded-pill border-0 shadow-sm px-4' \r\n                                                type='text' \r\n                                                placeholder='Ваша фамилия'\r\n                                                name='last_name'\r\n                                                value={ last_name }\r\n                                                onChange={e => onChange(e)} \r\n                                                required\r\n                                                 />\r\n                                        </div>\r\n                                        <div className='form-group mb-3'>\r\n                                            <input \r\n                                                className='form-control rounded-pill border-0 shadow-sm px-4 text-primary'\r\n                                                type='password' \r\n                                                placeholder='Пароль'\r\n                                                name='password'\r\n                                                value={ password }\r\n                                                onChange={e => onChange(e)}\r\n                                                minLength='6'\r\n                                                required />\r\n                                        </div>\r\n                                        <div className='form-group mb-3'>\r\n                                            <input \r\n                                                className='form-control rounded-pill border-0 shadow-sm px-4 text-primary'\r\n                                                type='password' \r\n                                                placeholder='Повторите пароль'\r\n                                                name='re_password'\r\n                                                value={ re_password }\r\n                                                onChange={e => onChange(e)}\r\n                                                minLength='6'\r\n                                                required />\r\n                                        </div>\r\n                                        <p className='mt-4 text-muted'>\r\n                                        У вас уже есть аккаунт? Тогда вы можете пройти <Link to='/login'>авторизацию</Link></p>\r\n                                        <button type='submit' className='btn btn-primary btn-block text-uppercase mb-2 rounded-pill shadow-sm'>Войти</button>\r\n                                    </form>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.authReducer.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStateToProps, { signup })(SignUp);","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    AUTHENTICATED_FAIL,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    ACTIVATION_FAIL,\r\n    LOGOUT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    first_name: '',\r\n    last_name: '',\r\n    email: '',\r\n    id: '',\r\n};\r\n\r\nfunction authReducer(state = initialState, action) {\r\n\r\n    switch (action.type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n            };\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', action.payload.access);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: action.payload.access,\r\n                refresh: action.payload.refresh\r\n            };\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            };\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                first_name: action.payload.first_name,\r\n                last_name: action.payload.first_name,\r\n                email: action.payload.email,\r\n                id: action.payload.id,\r\n                \r\n            };\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            };\r\n        case USER_LOADED_FAIL:\r\n            return {...state};\r\n        case LOGIN_FAIL:\r\n        case SIGNUP_FAIL:\r\n        case LOGOUT:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                first_name: '',\r\n                last_name: '',\r\n                email: '',\r\n                id: ''\r\n            };\r\n        case PASSWORD_RESET_FAIL:\r\n        case PASSWORD_RESET_SUCCESS:\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case ACTIVATION_SUCCESS:\r\n        case ACTIVATION_FAIL:\r\n            return {\r\n                ...state\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer;","import { combineReducers } from 'redux';\r\nimport authReducer from './auth';\r\n\r\nexport default combineReducers({\r\n    authReducer\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducers';\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n    );\r\n\r\nexport default store;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Navbar from './hoc/navbar';\nimport Login from './pages/login';\nimport SignUp from './pages/signup';\n\nimport store from './store';\n\nconst App = () => (\n  <Provider store={store}>\n    <Router>\n      <Navbar>\n        <Switch>\n          <Route path='/login/' component={Login} />\n          <Route path='/signup/' component={SignUp} />\n        </Switch>\n      </Navbar>\n    </Router>\n  </Provider>\n)\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}